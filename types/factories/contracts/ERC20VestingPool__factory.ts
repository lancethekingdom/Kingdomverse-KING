/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC20VestingPool,
  ERC20VestingPoolInterface,
} from "../../contracts/ERC20VestingPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EtherReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "beneficiaryAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "openNow",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "freezeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "freezeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vestingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct VestingScheduleConfig",
        name: "_config",
        type: "tuple",
      },
    ],
    name: "addVestingSchedule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiaryAddress",
        type: "address",
      },
    ],
    name: "getVestingSchedule",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "openTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "freezeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "freezeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vestingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimed",
            type: "uint256",
          },
        ],
        internalType: "struct VestingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107dd3803806107dd83398101604081905261002f91610107565b610038336100b7565b6001600160a01b0381166100925760405162461bcd60e51b815260206004820152601560248201527f496e76616c696420546f6b656e20416464726573730000000000000000000000604482015260640160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055610137565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561011957600080fd5b81516001600160a01b038116811461013057600080fd5b9392505050565b610697806101466000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632ec217e71461005c578063715018a6146100715780638da5cb5b146100795780639f82906314610099578063f2fde38b14610104575b600080fd5b61006f61006a366004610568565b610117565b005b61006f610345565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100ac6100a73660046105fc565b610359565b6040516100909190600060e0820190508251151582526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b61006f6101123660046105fc565b610415565b61011f61048e565b80516001600160a01b031661017b5760405162461bcd60e51b815260206004820152601b60248201527f42656e6566696369617279206973207a65726f2061646472657373000000000060448201526064015b60405180910390fd5b80516001600160a01b03166000908152600260205260409020805460ff16156101e65760405162461bcd60e51b815260206004820152601f60248201527f56657374696e67207363686564756c6520616c726561647920657869737473006044820152606401610172565b600082606001518360a001516101fc919061061e565b116102425760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081d995cdd1a5b99c8185b5bdd5b9d60521b6044820152606401610172565b600154606083015160a08401516001600160a01b03909216916323b872dd913391309161026e9161061e565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b1580156102bd57600080fd5b505af11580156102d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f59190610644565b50805460ff1916600117815560a08201516005820155606082015160038201556040820151600282015560808201516004820155602082015161033a5760001961033c565b425b60019091015550565b61034d61048e565b61035760006104e8565b565b61039b6040518060e001604052806000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6103a361048e565b506001600160a01b038116600090815260026020818152604092839020835160e081018552815460ff161515815260018201549281019290925291820154928101929092526003810154606083015260048101546080830152600581015460a08301526006015460c08201525b919050565b61041d61048e565b6001600160a01b0381166104825760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610172565b61048b816104e8565b50565b6000546001600160a01b031633146103575760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610172565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461041057600080fd5b801515811461048b57600080fd5b80356104108161054f565b600060c0828403121561057a57600080fd5b60405160c0810181811067ffffffffffffffff821117156105ab57634e487b7160e01b600052604160045260246000fd5b6040526105b783610538565b81526105c56020840161055d565b602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528091505092915050565b60006020828403121561060e57600080fd5b61061782610538565b9392505050565b6000821982111561063f57634e487b7160e01b600052601160045260246000fd5b500190565b60006020828403121561065657600080fd5b81516106178161054f56fea26469706673582212206051d95d9dbf54306d4c5c5611fb5435c20fa99f807dd4939b8c10c2a8d1735d64736f6c63430008090033";

type ERC20VestingPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20VestingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20VestingPool__factory extends ContractFactory {
  constructor(...args: ERC20VestingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20VestingPool> {
    return super.deploy(
      tokenAddress,
      overrides || {}
    ) as Promise<ERC20VestingPool>;
  }
  override getDeployTransaction(
    tokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenAddress, overrides || {});
  }
  override attach(address: string): ERC20VestingPool {
    return super.attach(address) as ERC20VestingPool;
  }
  override connect(signer: Signer): ERC20VestingPool__factory {
    return super.connect(signer) as ERC20VestingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20VestingPoolInterface {
    return new utils.Interface(_abi) as ERC20VestingPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20VestingPool {
    return new Contract(address, _abi, signerOrProvider) as ERC20VestingPool;
  }
}
