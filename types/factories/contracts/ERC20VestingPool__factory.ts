/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC20VestingPool,
  ERC20VestingPoolInterface,
} from "../../contracts/ERC20VestingPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EtherReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiaryAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_vestingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_freezeAmount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_freezeDuration",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_vestingDuration",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "startNow",
        type: "bool",
      },
    ],
    name: "addVestingSchedule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161069738038061069783398101604081905261002f91610107565b610038336100b7565b6001600160a01b0381166100925760405162461bcd60e51b815260206004820152601560248201527f496e76616c696420546f6b656e20416464726573730000000000000000000000604482015260640160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055610137565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561011957600080fd5b81516001600160a01b038116811461013057600080fd5b9392505050565b610551806101466000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80635446789014610051578063715018a6146100665780638da5cb5b1461006e578063f2fde38b1461008d575b600080fd5b61006461005f36600461044c565b6100a0565b005b6100646102d3565b600054604080516001600160a01b039092168252519081900360200190f35b61006461009b3660046104b6565b6102e7565b6100a8610360565b6001600160a01b0386166101035760405162461bcd60e51b815260206004820152601b60248201527f42656e6566696369617279206973207a65726f2061646472657373000000000060448201526064015b60405180910390fd5b6001600160a01b0386166000908152600260205260409020805460ff161561016d5760405162461bcd60e51b815260206004820152601f60248201527f56657374696e67207363686564756c6520616c7265616479206578697374730060448201526064016100fa565b600061017986886104d8565b116101bf5760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081d995cdd1a5b99c8185b5bdd5b9d60521b60448201526064016100fa565b6001546001600160a01b03166323b872dd33306101dc898b6104d8565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561022b57600080fd5b505af115801561023f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026391906104fe565b50805460ff19166001908117825581018690556002810185905560038101805467ffffffffffffffff85811668010000000000000000026fffffffffffffffffffffffffffffffff1990921690871617179055816102c3576000196102c5565b425b600490910155505050505050565b6102db610360565b6102e560006103ba565b565b6102ef610360565b6001600160a01b0381166103545760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100fa565b61035d816103ba565b50565b6000546001600160a01b031633146102e55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100fa565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461042157600080fd5b919050565b803567ffffffffffffffff8116811461042157600080fd5b801515811461035d57600080fd5b60008060008060008060c0878903121561046557600080fd5b61046e8761040a565b9550602087013594506040870135935061048a60608801610426565b925061049860808801610426565b915060a08701356104a88161043e565b809150509295509295509295565b6000602082840312156104c857600080fd5b6104d18261040a565b9392505050565b600082198211156104f957634e487b7160e01b600052601160045260246000fd5b500190565b60006020828403121561051057600080fd5b81516104d18161043e56fea26469706673582212209ad653b55c79cc2a250d0632cc0b8e3c0bd047f089fc2a455c635cc9998671e764736f6c63430008090033";

type ERC20VestingPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20VestingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20VestingPool__factory extends ContractFactory {
  constructor(...args: ERC20VestingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20VestingPool> {
    return super.deploy(
      tokenAddress,
      overrides || {}
    ) as Promise<ERC20VestingPool>;
  }
  override getDeployTransaction(
    tokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenAddress, overrides || {});
  }
  override attach(address: string): ERC20VestingPool {
    return super.attach(address) as ERC20VestingPool;
  }
  override connect(signer: Signer): ERC20VestingPool__factory {
    return super.connect(signer) as ERC20VestingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20VestingPoolInterface {
    return new utils.Interface(_abi) as ERC20VestingPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20VestingPool {
    return new Contract(address, _abi, signerOrProvider) as ERC20VestingPool;
  }
}
