/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC20VestingPool,
  ERC20VestingPoolInterface,
} from "../../contracts/ERC20VestingPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EtherReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "beneficiaryAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "startNow",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "freezeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "freezeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vestingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct VestingScheduleConfig",
        name: "_config",
        type: "tuple",
      },
    ],
    name: "addVestingSchedule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "beneficiaryAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "startNow",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "freezeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "freezeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vestingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct VestingScheduleConfig[]",
        name: "_configs",
        type: "tuple[]",
      },
    ],
    name: "addVestingSchedules",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiaryAddress",
        type: "address",
      },
    ],
    name: "getVestingSchedule",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "freezeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "freezeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vestingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimed",
            type: "uint256",
          },
        ],
        internalType: "struct VestingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161097738038061097783398101604081905261002f91610107565b610038336100b7565b6001600160a01b0381166100925760405162461bcd60e51b815260206004820152601560248201527f496e76616c696420546f6b656e20416464726573730000000000000000000000604482015260640160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055610137565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561011957600080fd5b81516001600160a01b038116811461013057600080fd5b9392505050565b610831806101466000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632ec217e714610067578063715018a61461007c5780638da5cb5b146100845780639f829063146100a4578063f2fde38b1461010f578063f8a2297814610122575b600080fd5b61007a610075366004610691565b610135565b005b61007a610363565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100b76100b23660046106b4565b610377565b60405161009b9190600060e0820190508251151582526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b61007a61011d3660046106b4565b610427565b61007a6101303660046106cf565b6104a0565b61013d6104ec565b80516001600160a01b03166101995760405162461bcd60e51b815260206004820152601b60248201527f42656e6566696369617279206973207a65726f2061646472657373000000000060448201526064015b60405180910390fd5b80516001600160a01b03166000908152600260205260409020805460ff16156102045760405162461bcd60e51b815260206004820152601f60248201527f56657374696e67207363686564756c6520616c726561647920657869737473006044820152606401610190565b600082606001518360a0015161021a9190610795565b116102605760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081d995cdd1a5b99c8185b5bdd5b9d60521b6044820152606401610190565b600154606083015160a08401516001600160a01b03909216916323b872dd913391309161028c91610795565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b1580156102db57600080fd5b505af11580156102ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031391906107ad565b50805460ff1916600117815560a0820151600582015560608201516003820155604082015160028201556080820151600482015560208201516103585760001961035a565b425b60019091015550565b61036b6104ec565b6103756000610546565b565b6103b96040518060e001604052806000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b506001600160a01b0316600090815260026020818152604092839020835160e081018552815460ff161515815260018201549281019290925291820154928101929092526003810154606083015260048101546080830152600581015460a08301526006015460c082015290565b61042f6104ec565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610190565b61049d81610546565b50565b6104a86104ec565b60005b81518110156104e8576104d68282815181106104c9576104c96107ca565b6020026020010151610135565b806104e0816107e0565b9150506104ab565b5050565b6000546001600160a01b031633146103755760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610190565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156105d5576105d5610596565b604052919050565b80356001600160a01b03811681146105f457600080fd5b919050565b801515811461049d57600080fd5b600060c0828403121561061957600080fd5b60405160c0810181811067ffffffffffffffff8211171561063c5761063c610596565b60405290508061064b836105dd565b8152602083013561065b816105f9565b8060208301525060408301356040820152606083013560608201526080830135608082015260a083013560a08201525092915050565b600060c082840312156106a357600080fd5b6106ad8383610607565b9392505050565b6000602082840312156106c657600080fd5b6106ad826105dd565b600060208083850312156106e257600080fd5b823567ffffffffffffffff808211156106fa57600080fd5b818501915085601f83011261070e57600080fd5b81358181111561072057610720610596565b61072e848260051b016105ac565b818152848101925060c091820284018501918883111561074d57600080fd5b938501935b82851015610773576107648986610607565b84529384019392850192610752565b50979650505050505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156107a8576107a861077f565b500190565b6000602082840312156107bf57600080fd5b81516106ad816105f9565b634e487b7160e01b600052603260045260246000fd5b60006000198214156107f4576107f461077f565b506001019056fea264697066735822122057fb462ba1117b7c33fcb0e4bf63a7c5f6ab9264c2e7b091e2115c363f06262e64736f6c63430008090033";

type ERC20VestingPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20VestingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20VestingPool__factory extends ContractFactory {
  constructor(...args: ERC20VestingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20VestingPool> {
    return super.deploy(
      tokenAddress,
      overrides || {}
    ) as Promise<ERC20VestingPool>;
  }
  override getDeployTransaction(
    tokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenAddress, overrides || {});
  }
  override attach(address: string): ERC20VestingPool {
    return super.attach(address) as ERC20VestingPool;
  }
  override connect(signer: Signer): ERC20VestingPool__factory {
    return super.connect(signer) as ERC20VestingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20VestingPoolInterface {
    return new utils.Interface(_abi) as ERC20VestingPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20VestingPool {
    return new Contract(address, _abi, signerOrProvider) as ERC20VestingPool;
  }
}
