/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  King,
  KingInterface,
  VestingScheduleConfigStruct,
} from "../../contracts/King";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "beneficiaryAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "startNow",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "freezeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "freezeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vestingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct VestingScheduleConfig[]",
        name: "_initialVestingScheduleConfigs",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVestingPoolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "beneficiaryAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "startNow",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "freezeDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "freezeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vestingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct VestingScheduleConfig[]",
        name: "_initialVestingScheduleConfigs",
        type: "tuple[]",
      },
    ],
    name: "initVestingPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620022b8380380620022b88339810160408190526200003491620004da565b6040805180820182526004808252634b494e4760e01b6020808401828152855180870190965292855284015281519192916200007391600391620003b2565b50805162000089906004906020840190620003b2565b50506005805460ff1916905550620000a13362000173565b6000805b82518110156200010f576000838281518110620000c657620000c662000600565b602002602001015190508060a0015183620000e291906200062c565b9250806060015183620000f691906200062c565b9250508080620001069062000647565b915050620000a5565b506080819052620001213382620001cd565b30604051620001309062000441565b6001600160a01b039091168152602001604051809103906000f0801580156200015d573d6000803e3d6000fd5b506001600160a01b031660a05250620006a29050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6b033b2e3c9fd0803ce800000081620001f06200025860201b620003ad1760201c565b620001fc91906200062c565b11156200023d5760405162461bcd60e51b815260206004820152600a6024820152694d41585f535550504c5960b01b60448201526064015b60405180910390fd5b6200025482826200025e60201b620007a71760201c565b5050565b60025490565b6001600160a01b038216620002b65760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000234565b620002c46000838362000351565b8060026000828254620002d891906200062c565b90915550506001600160a01b03821660009081526020819052604081208054839290620003079084906200062c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b62000369838383620003ad60201b620008921760201c565b60055460ff1615620003ad5760405162461bcd60e51b815260206004820152600c60248201526b151bdad95b881c185d5cd95960a21b604482015260640162000234565b505050565b828054620003c09062000665565b90600052602060002090601f016020900481019282620003e457600085556200042f565b82601f10620003ff57805160ff19168380011785556200042f565b828001600101855582156200042f579182015b828111156200042f57825182559160200191906001019062000412565b506200043d9291506200044f565b5090565b6109b5806200190383390190565b5b808211156200043d576000815560010162000450565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715620004a157620004a162000466565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004d257620004d262000466565b604052919050565b60006020808385031215620004ee57600080fd5b82516001600160401b03808211156200050657600080fd5b818501915085601f8301126200051b57600080fd5b81518181111562000530576200053062000466565b62000540848260051b01620004a7565b818152848101925060c09182028401850191888311156200056057600080fd5b938501935b82851015620005f45780858a0312156200057f5760008081fd5b620005896200047c565b85516001600160a01b0381168114620005a25760008081fd5b8152858701518015158114620005b85760008081fd5b8188015260408681015190820152606080870151908201526080808701519082015260a080870151908201528452938401939285019262000565565b50979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111562000642576200064262000616565b500190565b60006000198214156200065e576200065e62000616565b5060010190565b600181811c908216806200067a57607f821691505b602082108114156200069c57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05161121f620006e46000396000818161017f0152818161062901526106850152600081816102bb0152818161059c015261064a015261121f6000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063a457c2d71161007c578063a457c2d71461027d578063a9059cbb14610290578063c0928884146102a3578063cd3293de146102b6578063dd62ed3e146102dd578063f2fde38b146102f057600080fd5b806370a0823114610226578063715018a61461024f5780638456cb59146102575780638da5cb5b1461025f57806395d89b411461027557600080fd5b8063313ce567116100ff578063313ce567146101dc57806332cb6b0c146101eb57806339509351146101fe5780633f4ba83a146102115780635c975abb1461021b57600080fd5b806306fdde031461013c578063095ea7b31461015a5780630a463e1c1461017d57806318160ddd146101b757806323b872dd146101c9575b600080fd5b610144610303565b6040516101519190610e28565b60405180910390f35b61016d610168366004610e99565b610395565b6040519015158152602001610151565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b039091168152602001610151565b6002545b604051908152602001610151565b61016d6101d7366004610ec3565b6103b3565b60405160128152602001610151565b6101bb6b033b2e3c9fd0803ce800000081565b61016d61020c366004610e99565b6103d7565b6102196103f9565b005b60055460ff1661016d565b6101bb610234366004610eff565b6001600160a01b031660009081526020819052604090205490565b61021961040b565b61021961041d565b60055461010090046001600160a01b031661019f565b61014461042d565b61016d61028b366004610e99565b61043c565b61016d61029e366004610e99565b6104bc565b6102196102b1366004610f91565b6104ca565b6101bb7f000000000000000000000000000000000000000000000000000000000000000081565b6101bb6102eb366004611099565b610703565b6102196102fe366004610eff565b61072e565b606060038054610312906110cc565b80601f016020809104026020016040519081016040528092919081815260200182805461033e906110cc565b801561038b5780601f106103605761010080835404028352916020019161038b565b820191906000526020600020905b81548152906001019060200180831161036e57829003601f168201915b5050505050905090565b6000336103a3818585610897565b5060019392505050565b60025490565b6000336103c18582856109bb565b6103cc858585610a35565b506001949350505050565b6000336103a38185856103ea8383610703565b6103f4919061111d565b610897565b610401610c0e565b610409610c6e565b565b610413610c0e565b6104096000610cc0565b610425610c0e565b610409610d1a565b606060048054610312906110cc565b6000338161044a8286610703565b9050838110156104af5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103cc8286868403610897565b6000336103a3818585610a35565b6104d2610c0e565b600554600160a81b900460ff16156105365760405162461bcd60e51b815260206004820152602160248201527f56657374696e6720706f6f6c20686173206265656e20696e697469616c697a656044820152601960fa1b60648201526084016104a6565b6000805b825181101561059957600083828151811061055757610557611135565b602002602001015190508060a0015183610571919061111d565b9250806060015183610583919061111d565b92505080806105919061114b565b91505061053a565b507f000000000000000000000000000000000000000000000000000000000000000081146106235760405162461bcd60e51b815260206004820152603160248201527f56657374696e6720616d6f756e7420646f6573206e6f74206d617463682077696044820152701d1a081c995cd95c9d9959081b5bdd5b9d607a1b60648201526084016104a6565b61066e337f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610897565b604051631f14452f60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063f8a22978906106ba908590600401611166565b600060405180830381600087803b1580156106d457600080fd5b505af11580156106e8573d6000803e3d6000fd5b50506005805460ff60a81b1916600160a81b17905550505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610736610c0e565b6001600160a01b03811661079b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a6565b6107a481610cc0565b50565b6001600160a01b0382166107fd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104a6565b61080960008383610d57565b806002600082825461081b919061111d565b90915550506001600160a01b0382166000908152602081905260408120805483929061084890849061111d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b6001600160a01b0383166108f95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a6565b6001600160a01b03821661095a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006109c78484610703565b90506000198114610a2f5781811015610a225760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a6565b610a2f8484848403610897565b50505050565b6001600160a01b038316610a995760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a6565b6001600160a01b038216610afb5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a6565b610b06838383610d57565b6001600160a01b03831660009081526020819052604090205481811015610b7e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104a6565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610bb590849061111d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c0191815260200190565b60405180910390a3610a2f565b6005546001600160a01b036101009091041633146104095760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a6565b610c76610d99565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610d22610de2565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610ca33390565b60055460ff16156108925760405162461bcd60e51b815260206004820152600c60248201526b151bdad95b881c185d5cd95960a21b60448201526064016104a6565b60055460ff166104095760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104a6565b60055460ff16156104095760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104a6565b600060208083528351808285015260005b81811015610e5557858101830151858201604001528201610e39565b81811115610e67576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610e9457600080fd5b919050565b60008060408385031215610eac57600080fd5b610eb583610e7d565b946020939093013593505050565b600080600060608486031215610ed857600080fd5b610ee184610e7d565b9250610eef60208501610e7d565b9150604084013590509250925092565b600060208284031215610f1157600080fd5b610f1a82610e7d565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715610f5a57610f5a610f21565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610f8957610f89610f21565b604052919050565b60006020808385031215610fa457600080fd5b823567ffffffffffffffff80821115610fbc57600080fd5b818501915085601f830112610fd057600080fd5b813581811115610fe257610fe2610f21565b610ff0848260051b01610f60565b818152848101925060c091820284018501918883111561100f57600080fd5b938501935b8285101561108d5780858a03121561102c5760008081fd5b611034610f37565b61103d86610e7d565b81528686013580151581146110525760008081fd5b8188015260408681013590820152606080870135908201526080808701359082015260a0808701359082015284529384019392850192611014565b50979650505050505050565b600080604083850312156110ac57600080fd5b6110b583610e7d565b91506110c360208401610e7d565b90509250929050565b600181811c908216806110e057607f821691505b6020821081141561110157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561113057611130611107565b500190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561115f5761115f611107565b5060010190565b602080825282518282018190526000919060409081850190868401855b828110156111dc57815180516001600160a01b03168552868101511515878601528581015186860152606080820151908601526080808201519086015260a0908101519085015260c09093019290850190600101611183565b509197965050505050505056fea2646970667358221220801eb2abfe8ac3c5c4bc55fa428bef0d8339621f8ca9627ea180e0fb33f663da64736f6c6343000809003360a060405234801561001057600080fd5b506040516109b53803806109b583398101604081905261002f916100f3565b610038336100a3565b6001600160a01b0381166100925760405162461bcd60e51b815260206004820152601560248201527f496e76616c696420546f6b656e20416464726573730000000000000000000000604482015260640160405180910390fd5b6001600160a01b0316608052610123565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561010557600080fd5b81516001600160a01b038116811461011c57600080fd5b9392505050565b60805161087761013e600039600061028d01526108776000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100be5780639f829063146100cf578063f2fde38b1461013a578063f8a229781461014d57600080fd5b80632ec217e71461008257806338cc483114610097578063715018a6146100b6575b600080fd5b6100956100903660046106d7565b610160565b005b305b6040516001600160a01b0390911681526020015b60405180910390f35b6100956103a7565b6000546001600160a01b0316610099565b6100e26100dd3660046106fa565b6103bb565b6040516100ad9190600060e0820190508251151582526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b6100956101483660046106fa565b61046d565b61009561015b366004610715565b6104e6565b610168610532565b80516001600160a01b03166101c45760405162461bcd60e51b815260206004820152601b60248201527f42656e6566696369617279206973207a65726f2061646472657373000000000060448201526064015b60405180910390fd5b80516001600160a01b03166000908152600160205260409020805460ff161561022f5760405162461bcd60e51b815260206004820152601f60248201527f56657374696e67207363686564756c6520616c7265616479206578697374730060448201526064016101bb565b600082606001518360a0015161024591906107db565b1161028b5760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081d995cdd1a5b99c8185b5bdd5b9d60521b60448201526064016101bb565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd333085606001518660a001516102d091906107db565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561031f57600080fd5b505af1158015610333573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035791906107f3565b50805460ff1916600117815560a08201516005820155606082015160038201556040820151600282015560808201516004820155602082015161039c5760001961039e565b425b60019091015550565b6103af610532565b6103b9600061058c565b565b6103fd6040518060e001604052806000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b506001600160a01b0316600090815260016020818152604092839020835160e081018552815460ff161515815292810154918301919091526002810154928201929092526003820154606082015260048201546080820152600582015460a082015260069091015460c082015290565b610475610532565b6001600160a01b0381166104da5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101bb565b6104e38161058c565b50565b6104ee610532565b60005b815181101561052e5761051c82828151811061050f5761050f610810565b6020026020010151610160565b8061052681610826565b9150506104f1565b5050565b6000546001600160a01b031633146103b95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101bb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561061b5761061b6105dc565b604052919050565b80356001600160a01b038116811461063a57600080fd5b919050565b80151581146104e357600080fd5b600060c0828403121561065f57600080fd5b60405160c0810181811067ffffffffffffffff82111715610682576106826105dc565b60405290508061069183610623565b815260208301356106a18161063f565b8060208301525060408301356040820152606083013560608201526080830135608082015260a083013560a08201525092915050565b600060c082840312156106e957600080fd5b6106f3838361064d565b9392505050565b60006020828403121561070c57600080fd5b6106f382610623565b6000602080838503121561072857600080fd5b823567ffffffffffffffff8082111561074057600080fd5b818501915085601f83011261075457600080fd5b813581811115610766576107666105dc565b610774848260051b016105f2565b818152848101925060c091820284018501918883111561079357600080fd5b938501935b828510156107b9576107aa898661064d565b84529384019392850192610798565b50979650505050505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156107ee576107ee6107c5565b500190565b60006020828403121561080557600080fd5b81516106f38161063f565b634e487b7160e01b600052603260045260246000fd5b600060001982141561083a5761083a6107c5565b506001019056fea2646970667358221220e1237c392c8ce17ede7c4a5c61dac55c7fe1d575e810346f45a5fd3bcd650c2464736f6c63430008090033";

type KingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class King__factory extends ContractFactory {
  constructor(...args: KingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _initialVestingScheduleConfigs: VestingScheduleConfigStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<King> {
    return super.deploy(
      _initialVestingScheduleConfigs,
      overrides || {}
    ) as Promise<King>;
  }
  override getDeployTransaction(
    _initialVestingScheduleConfigs: VestingScheduleConfigStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _initialVestingScheduleConfigs,
      overrides || {}
    );
  }
  override attach(address: string): King {
    return super.attach(address) as King;
  }
  override connect(signer: Signer): King__factory {
    return super.connect(signer) as King__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KingInterface {
    return new utils.Interface(_abi) as KingInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): King {
    return new Contract(address, _abi, signerOrProvider) as King;
  }
}
